openapi: 3.0.1
info:
  title: IRN API v1
  description: Allows users to extract, create, update and configure IRN data.
  version: '1'
servers:
  - url: https://api.factset.com/research/irn
    description: Production Server
  - url: https://api-sandbox.factset.com/research/irn
    description: Sandbox
paths:
  /v1/authors:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Authors
      operationId: GetAuthors
      parameters:
        - name: X-IRN-Ignore-Permissions
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorConfigDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-custom-fields:
    get:
      tags:
        - - - - Contacts - CustomFields
      summary: Get all the contact custom fields
      operationId: GetContactCustomFields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactCustomFieldDto'
    post:
      tags:
        - - - - Contacts - CustomFields
      summary: Create a contact custom field
      operationId: CreateContactCustomField
      requestBody:
        description: ContactCustomFieldSaveDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactCustomFieldSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCustomFieldSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactCustomFieldSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactCustomFieldSaveDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-custom-fields/{contactCustomFieldId}:
    get:
      tags:
        - - - - Contacts - CustomFields
      summary: Get a specific Contact custom field's details
      operationId: GetContactCustomField
      parameters:
        - name: contactCustomFieldId
          in: path
          description: contactCustomFieldId to get associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCustomFieldDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - - - - Contacts - CustomFields
      summary: Edit a contact custom field
      operationId: PatchContactCustomField
      parameters:
        - name: contactCustomFieldId
          in: path
          description: contactCustomFieldId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: contactCustomFieldUpdateDto object to update
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - CustomFields
      summary: Delete a contact custom field
      operationId: DeleteContactCustomField
      parameters:
        - name: contactCustomFieldId
          in: path
          description: contactCustomFieldId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-roles:
    get:
      tags:
        - - - - Contacts - Roles
      summary: Get list of the contact roles configured in your group
      operationId: GetContactRoles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactRoleDto'
    post:
      tags:
        - - - - Contacts - Roles
      summary: Create contact roles
      operationId: CreateContactRole
      requestBody:
        description: Contact role name
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-types:
    get:
      tags:
        - - - - Contacts - Types
      summary: Get list of the contact types configured in your group
      operationId: GetContactTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactTypeDto'
    post:
      tags:
        - - - - Contacts - Types
      summary: Create contact types
      operationId: CreateContactType
      requestBody:
        description: Contact type name
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-fields:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Custom Fields
      operationId: GetCustomFields
      parameters:
        - name: X-IRN-Ignore-Permissions
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldConfigDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-symbol-custom-fields:
    get:
      tags:
        - - - - CustomSymbols - CustomFields
      summary: Get all the Custom symbol custom fields
      operationId: GetCustomSymbolCustomFields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
    post:
      tags:
        - - - - CustomSymbols - CustomFields
      summary: Create a Custom symbol custom field
      operationId: CreateCustomSymbolCustomField
      requestBody:
        description: createCustomSymbolCustomFieldDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateCustomSymbolCustomFieldDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomSymbolCustomFieldDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustomSymbolCustomFieldDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomSymbolCustomFieldDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-symbol-custom-fields/{customSymbolCustomFieldId}:
    get:
      tags:
        - - - - CustomSymbols - CustomFields
      summary: Get a specific Custom symbol custom field's details
      operationId: GetCustomSymbolCustomField
      parameters:
        - name: customSymbolCustomFieldId
          in: path
          description: customSymbolCustomFieldId to get associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - - - - CustomSymbols - CustomFields
      summary: Edit a Custom symbol custom field
      operationId: PatchCustomSymbolCustomField
      parameters:
        - name: customSymbolCustomFieldId
          in: path
          description: customSymbolCustomFieldId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: customSymbolCustomFieldUpdateDto object to update
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - CustomSymbols - CustomFields
      summary: Delete a Custom symbol custom field
      operationId: DeleteCustomSymbolCustomField
      parameters:
        - name: customSymbolCustomFieldId
          in: path
          description: customSymbolCustomFieldId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-symbol-types:
    get:
      tags:
        - - - - CustomSymbols - Types
      summary: Get all the custom symbol types
      operationId: GetCustomSymbolTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomSymbolTypeDto'
    post:
      tags:
        - - - - CustomSymbols - Types
      summary: Create a Custom symbol type
      operationId: CreateCustomSymbolType
      requestBody:
        description: saveCustomSymbolTypeDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SaveCustomSymbolTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCustomSymbolTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveCustomSymbolTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SaveCustomSymbolTypeDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-symbol-types/{customSymbolTypeId}:
    get:
      tags:
        - - - - CustomSymbols - Types
      summary: Get a specific Custom symbol type's details
      operationId: GetCustomSymbolType
      parameters:
        - name: customSymbolTypeId
          in: path
          description: customSymbolTypeId to get associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSymbolTypeDetailDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - - - - CustomSymbols - Types
      summary: Edit a Custom symbol type
      operationId: UpdateCustomSymbolType
      parameters:
        - name: customSymbolTypeId
          in: path
          description: customSymbolTypeId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: updateCustomSymbolTypeDto object to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - CustomSymbols - Types
      summary: Delete a Custom symbol type
      operationId: DeleteCustomSymbolTypeAsync
      parameters:
        - name: customSymbolTypeId
          in: path
          description: customSymbolTypeId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/custom-symbol-types/{customSymbolTypeId}/custom-fields:
    get:
      tags:
        - - - - CustomSymbols - Types
      summary: Get Custom fields for Custom Symbol type
      operationId: GetSymbolCustomFieldsForCustomSymbolType
      parameters:
        - name: customSymbolTypeId
          in: path
          description: customSymbolTypeId to get associated Custom fileds
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/group:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get Group details
      operationId: GetGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupConfigDto'
  /v1/group/client-sales-representative:
    get:
      tags:
        - - - - Notes - Configuration
      operationId: GetClientsSalesRepresentative
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSalesRepresentativeDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/phone-number-types:
    get:
      tags:
        - - - - Contacts - PhoneNumberTypes
      summary: Get list of the phone types configured in your group
      operationId: GetPhoneNumberTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneNumberTypeDto'
    post:
      tags:
        - - - - Contacts - PhoneNumberTypes
      summary: Create a phone type
      operationId: CreatePhoneNumberType
      requestBody:
        description: To add phoneNumberType
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/recommendations:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Recommendations
      operationId: GetRecommendations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecommendationConfigDto'
  /v1/relationship-categories:
    get:
      tags:
        - - - - Contacts - Relationship Category
      summary: Get list of the relationship categories configured in your group
      operationId: GetRelationshipCategories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipCategoryDto'
    post:
      tags:
        - - - - Contacts - Relationship Category
      summary: Create a relationship category
      operationId: CreateRelationshipCategory
      requestBody:
        description: RelationshipCategorySaveDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/relationships:
    get:
      tags:
        - - - - Contacts - Relationships
      summary: Get list of the relationships configured in your group
      operationId: GetRelationships
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/RelationshipType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipDto'
    post:
      tags:
        - - - - Contacts - Relationships
      summary: Create a relationship type
      operationId: CreateContactRelationshipType
      requestBody:
        description: RelationshipSaveDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/sentiments:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Sentiments
      operationId: GetSentiments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SentimentConfigDto'
  /v1/subjects:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Subjects
      operationId: GetSubjects
      parameters:
        - name: X-IRN-Ignore-Permissions
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectSummaryDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/subjects/{subjectId}:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get Subject details for the given Id provided
      operationId: GetSubject
      parameters:
        - name: subjectId
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
        - name: X-IRN-Ignore-Permissions
          in: header
          description: ''
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectConfigDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/symbols-relationships:
    get:
      tags:
        - - - - CustomSymbols - Relationships
      summary: Get all the Symbols Relationships
      operationId: GetSymbolsRelationships
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SymbolsRelationshipDto'
    post:
      tags:
        - - - - CustomSymbols - Relationships
      summary: Create a symbol relationship
      operationId: CreateSymbolRelationshipType
      requestBody:
        description: symbolsRelationshipSaveDto object to save
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/teams:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all Teams
      operationId: GetTeams
      parameters:
        - name: X-IRN-Ignore-Permissions
          in: header
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamSummaryDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/teams/{teamId}:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get Team details for the given Id provided
      operationId: GetTeam
      parameters:
        - name: teamId
          in: path
          description: Id
          required: true
          schema:
            type: string
            format: uuid
        - name: X-IRN-Ignore-Permissions
          in: header
          description: ''
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamConfigDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/users:
    get:
      tags:
        - - - - Notes - Configuration
      summary: Get all assigned FactSet users
      operationId: GetAssignedFactSetUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserConfigDto'
  /v1/custom-symbol-types/reorder:
    post:
      tags:
        - - - - CustomSymbols - Types
      operationId: UpdateCustomSymbolTypeOrder
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/relationship-categories/reorder:
    post:
      tags:
        - - - - Contacts - Relationship Category
      summary: Reorder relationship categories
      operationId: UpdateRelationshipCategoryOrder
      requestBody:
        description: List of Guid
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-roles/{contactRoleId}:
    put:
      tags:
        - - - - Contacts - Roles
      summary: Edit a contact role
      operationId: UpdateContactRole
      parameters:
        - name: contactRoleId
          in: path
          description: contactRoleId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Updated contact role name
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - Roles
      summary: Delete a contact role
      operationId: DeleteContactRole
      parameters:
        - name: contactRoleId
          in: path
          description: contactRoleId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/contact-types/{contactTypeId}:
    put:
      tags:
        - - - - Contacts - Types
      summary: Edit a contact type
      operationId: UpdateContactType
      parameters:
        - name: contactTypeId
          in: path
          description: contactTypeId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Updated contact type name
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - Types
      summary: Delete a contact type
      operationId: DeleteContactType
      parameters:
        - name: contactTypeId
          in: path
          description: contactTypeId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/phone-number-types/{phoneNumberTypeId}:
    put:
      tags:
        - - - - Contacts - PhoneNumberTypes
      summary: Edit a phone type
      operationId: UpdatePhoneNumberType
      parameters:
        - name: phoneNumberTypeId
          in: path
          description: phoneNumberTypeId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Update with phoneNumberType
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - PhoneNumberTypes
      summary: Delete a phone type
      operationId: DeletePhoneNumberType
      parameters:
        - name: phoneNumberTypeId
          in: path
          description: phoneNumberTypeId for deleting associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/relationship-categories/{relationshipCategoryId}:
    put:
      tags:
        - - - - Contacts - Relationship Category
      summary: Edit a relationship category
      operationId: EditRelationshipCategory
      parameters:
        - name: relationshipCategoryId
          in: path
          description: relationshipCategoryId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: RelationshipCategorySaveDto object to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - Relationship Category
      summary: Delete a relationship category
      operationId: DeleteRelationshipCategory
      parameters:
        - name: relationshipCategoryId
          in: path
          description: relationshipCategoryId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/relationships/{relationshipId}:
    put:
      tags:
        - - - - Contacts - Relationships
      summary: Edit a relationship type
      operationId: EditRelationship
      parameters:
        - name: relationshipId
          in: path
          description: relationshipId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: RelationshipSaveDto object to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - Contacts - Relationships
      summary: Delete a relationship type
      operationId: DeleteRelationship
      parameters:
        - name: relationshipId
          in: path
          description: relationshipId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/symbols-relationships/{symbolsRelationshipId}:
    put:
      tags:
        - - - - CustomSymbols - Relationships
      summary: Edit a symbol relationship
      operationId: EditSymbolsRelationship
      parameters:
        - name: symbolsRelationshipId
          in: path
          description: symbolsRelationshipId to update associated record
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: SymbolsRelationShipSaveDto object to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - - - - CustomSymbols - Relationships
      summary: Delete a symbol relationship
      operationId: DeleteSymbolsRelationship
      parameters:
        - name: symbolsRelationshipId
          in: path
          description: symbolsRelationshipId to delete associated record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ApprovalLevelConfigDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        approverIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    ApprovalProcessConfigDto:
      type: object
      properties:
        approvalLevels:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalLevelConfigDto'
          nullable: true
        viewerIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        shouldSendEmailAlertsWhenSubmittedForApproval:
          type: boolean
        shouldSendEmailAlertsWhenApproved:
          type: boolean
        shouldSendEmailAlertsWhenDenied:
          type: boolean
        shouldSendEmailAlertsToAuthor:
          type: boolean
        shouldSendEmailAlertsToApprovers:
          type: boolean
        shouldSendEmailAlertsToViewers:
          type: boolean
        canAuthorSelfApprove:
          type: boolean
        canAuthorEditPending:
          type: boolean
      additionalProperties: false
    AuthorConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        serialNumber:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        isActive:
          type: boolean
        team:
          $ref: '#/components/schemas/TeamSummaryDto'
      additionalProperties: false
    ClientSalesRepresentativeDto:
      type: object
      properties:
        fullname:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
      additionalProperties: false
    CommentaryConfigDto:
      type: object
      properties:
        shouldSendEmailAlertsToAuthor:
          type: boolean
        shouldSendEmailAlertsToCommenters:
          type: boolean
        shouldSendEmailAlertsToAll:
          type: boolean
      additionalProperties: false
    ContactCustomFieldDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/FormulaConfigDto'
        contactCustomFieldOptions:
          type: array
          items:
            $ref: '#/components/schemas/ContactCustomFieldOptionDto'
          nullable: true
      additionalProperties: false
    ContactCustomFieldFormulaDto:
      type: object
      properties:
        formula:
          maxLength: 2040
          type: string
          nullable: true
        isScreening:
          type: boolean
          default: false
        symbol:
          type: string
          nullable: true
      additionalProperties: false
    ContactCustomFieldOptionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
      additionalProperties: false
    ContactCustomFieldOptionSaveDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
      additionalProperties: false
    ContactCustomFieldSaveDto:
      required:
        - code
        - isHidden
        - isMandatory
        - name
        - type
      type: object
      properties:
        code:
          maxLength: 32
          type: string
        name:
          maxLength: 100
          type: string
        type:
          $ref: '#/components/schemas/ContactCustomFieldType'
        isHidden:
          type: boolean
          default: false
        isMandatory:
          type: boolean
          default: false
        fieldFormula:
          $ref: '#/components/schemas/ContactCustomFieldFormulaDto'
        contactCustomFieldOptions:
          type: array
          items:
            $ref: '#/components/schemas/ContactCustomFieldOptionSaveDto'
          nullable: true
      additionalProperties: false
    ContactCustomFieldType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      format: int32
    ContactRoleDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 50
          minLength: 0
          type: string
      additionalProperties: false
    ContactTypeDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 50
          minLength: 0
          type: string
      additionalProperties: false
    CreateCustomSymbolCustomFieldDto:
      required:
        - code
        - customSymbolTypes
        - isHidden
        - isMandatory
        - isShownInInfobox
        - name
        - type
      type: object
      properties:
        code:
          maxLength: 32
          type: string
        name:
          maxLength: 100
          type: string
        type:
          type: string
          description: >-
            Type can be one of Text, SingleOption, MultiOptions, Numeric, Date,
            ExtendedText, ContactLookup
        isHidden:
          type: boolean
          default: false
        isMandatory:
          type: boolean
          default: false
        isShownInInfobox:
          type: boolean
          default: true
        formulaConfig:
          $ref: '#/components/schemas/CustomSymbolCustomFieldFormulaConfigDto'
        optionsConfig:
          type: array
          items:
            type: string
          nullable: true
        customSymbolTypes:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    CustomFieldConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        usePreviousValue:
          type: boolean
        isMandatory:
          type: boolean
        isHidden:
          type: boolean
        isFilePath:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/FormulaConfigDto'
        numericConfig:
          $ref: '#/components/schemas/NumericConfigDto'
        integerConfig:
          $ref: '#/components/schemas/IntegerConfigDto'
        extendedTextConfig:
          $ref: '#/components/schemas/ExtendedTextConfigDto'
        optionsConfig:
          $ref: '#/components/schemas/OptionsConfigDto'
      additionalProperties: false
    CustomSymbolCustomFieldConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        isShownInInfobox:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/CustomSymbolCustomFieldFormulaConfigDto'
        optionsConfig:
          type: array
          items:
            type: string
          nullable: true
        customSymbolTypes:
          type: array
          items:
            $ref: '#/components/schemas/CustomSymbolTypeSummaryDto'
          nullable: true
      additionalProperties: false
    CustomSymbolCustomFieldFormulaConfigDto:
      required:
        - formula
        - formulaType
      type: object
      properties:
        formula:
          maxLength: 2040
          type: string
        formulaType:
          type: string
      additionalProperties: false
    CustomSymbolSubTypeDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    CustomSymbolTypeDetailDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        hideAddressField:
          type: boolean
        hideSymbolSubType:
          type: boolean
        isDefault:
          type: boolean
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          type: array
          items:
            $ref: '#/components/schemas/CustomSymbolSubTypeDto'
          nullable: true
      additionalProperties: false
    CustomSymbolTypeDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        hideAddressField:
          type: boolean
        hideSymbolSubType:
          type: boolean
        isDefault:
          type: boolean
        order:
          type: integer
          format: int32
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
      additionalProperties: false
    CustomSymbolTypeSummaryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    DateSettingsDto:
      type: object
      properties:
        allowEdit:
          type: boolean
        isLocked:
          type: boolean
      additionalProperties: false
    EntityType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    ExtendedTextConfigDto:
      type: object
      properties:
        maxChars:
          type: integer
          format: int32
      additionalProperties: false
    FormulaConfigDto:
      type: object
      properties:
        formula:
          type: string
          nullable: true
        formulaType:
          type: string
          nullable: true
      additionalProperties: false
    GroupConfigDto:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          type: string
          nullable: true
        Fields:
          $ref: '#/components/schemas/GroupFieldsDto'
      additionalProperties: false
    GroupFieldsDto:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/TitleSettingsDto'
        date:
          $ref: '#/components/schemas/DateSettingsDto'
        identifier:
          $ref: '#/components/schemas/IdentifierSettingsDto'
        subject:
          $ref: '#/components/schemas/SubjectSettingsDto'
        recommendation:
          $ref: '#/components/schemas/RecommendationSettingsDto'
        sentiment:
          $ref: '#/components/schemas/SentimentSettingsDto'
        link:
          $ref: '#/components/schemas/LinkSettingsDto'
        note:
          $ref: '#/components/schemas/NoteSettingsDto'
        source:
          $ref: '#/components/schemas/SourceSettingsDto'
        relatedSymbols:
          $ref: '#/components/schemas/RelatedSymbolsSettingsDto'
        relatedResearch:
          $ref: '#/components/schemas/RelatedResearchSettingsDto'
        relatedContacts:
          $ref: '#/components/schemas/RelatedContactsSettingsDto'
        team:
          $ref: '#/components/schemas/TeamSettingsDto'
        organizer:
          $ref: '#/components/schemas/OrganizerSettingsDto'
      additionalProperties: false
    HeadlineFormatConfigDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        customString:
          type: string
          nullable: true
        customFieldName:
          type: string
          nullable: true
      additionalProperties: false
    IdentifierSettingsDto:
      type: object
      properties:
        allowEdit:
          type: boolean
      additionalProperties: false
    IntegerConfigDto:
      type: object
      properties:
        splitType:
          type: string
          nullable: true
      additionalProperties: false
    LinkSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      additionalProperties: false
    NewItemDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
      additionalProperties: false
    NoteSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        allowPersonal:
          type: boolean
        defaultStatus:
          type: string
          nullable: true
        alternativeCustomFieldId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    NumericConfigDto:
      type: object
      properties:
        decimals:
          type: integer
          format: int32
        splitType:
          type: string
          nullable: true
      additionalProperties: false
    Operation:
      type: object
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    OptionsConfigDto:
      type: object
      properties:
        multiSelectEnabled:
          type: boolean
        onTheFlyEnabled:
          type: boolean
        options:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrganizerSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
      additionalProperties: false
    PhoneNumberTypeDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        isStandard:
          type: boolean
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    RatingConfigDto:
      type: object
      properties:
        ratingsVisibleToAuthor:
          type: boolean
        ratingsVisibleToViewers:
          type: boolean
        ratingsVisibleToAll:
          type: boolean
        viewerIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        optionValues:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    RecommendationConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: integer
          format: int32
        isHidden:
          type: boolean
      additionalProperties: false
    RecommendationSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        defaultId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    RelatedContactsSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      additionalProperties: false
    RelatedResearchSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      additionalProperties: false
    RelatedSymbolsSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      additionalProperties: false
    RelationshipCategoryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        isStandard:
          type: boolean
        isContactToContact:
          type: boolean
        isContactToSymbol:
          type: boolean
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipDto'
          nullable: true
      additionalProperties: false
    RelationshipCategoryListDto:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    RelationshipCategorySaveDto:
      required:
        - categoryName
      type: object
      properties:
        categoryName:
          maxLength: 50
          minLength: 0
          type: string
        isContactToContact:
          type: boolean
          default: false
        isContactToSymbol:
          type: boolean
          default: false
      additionalProperties: false
    RelationshipDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        relationshipCategoryId:
          type: string
          format: uuid
        relationshipCode:
          type: string
          nullable: true
        bidirectionalName:
          type: string
          nullable: true
        leftToRightName:
          type: string
          nullable: true
        rightToLeftName:
          type: string
          nullable: true
        hideDates:
          type: boolean
        hideComment:
          type: boolean
        hideCompany:
          type: boolean
        isCustomisable:
          type: boolean
      additionalProperties: false
    RelationshipSaveDto:
      required:
        - hideComment
        - hideCompany
        - hideDates
        - relationshipCategoryId
      type: object
      properties:
        relationshipCategoryId:
          type: string
          format: uuid
        relationshipCode:
          maxLength: 5
          minLength: 0
          type: string
          nullable: true
        bidirectionalName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        leftToRightName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        rightToLeftName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        hideDates:
          type: boolean
          default: false
        hideComment:
          type: boolean
          default: false
        hideCompany:
          type: boolean
          default: false
      additionalProperties: false
    RelationshipType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ReorderCustomSymbolTypeDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    SaveCustomSymbolTypeDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubtype:
          type: boolean
        isDefault:
          type: boolean
          default: false
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          type: array
          items:
            type: string
          nullable: true
        customFieldIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    SentimentConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: integer
          format: int32
        color:
          type: string
          nullable: true
        isHidden:
          type: boolean
      additionalProperties: false
    SentimentSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        defaultId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SourceSettingsDto:
      type: object
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      additionalProperties: false
    SubjectConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isHidden:
          type: boolean
        identifierType:
          type: string
          nullable: true
        identifierTypes:
          type: array
          items:
            type: string
          nullable: true
        type:
          type: string
          nullable: true
        customFieldIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        approvalProcessConfig:
          $ref: '#/components/schemas/ApprovalProcessConfigDto'
        commentaryConfig:
          $ref: '#/components/schemas/CommentaryConfigDto'
        newsHeadlineFormat:
          type: array
          items:
            $ref: '#/components/schemas/HeadlineFormatConfigDto'
          nullable: true
        emailHeadlineFormat:
          type: array
          items:
            $ref: '#/components/schemas/HeadlineFormatConfigDto'
          nullable: true
        ratingConfig:
          $ref: '#/components/schemas/RatingConfigDto'
        noteLengthLimit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SubjectSettingsDto:
      type: object
      properties:
        defaultId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SubjectSummaryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        identifierType:
          type: string
          nullable: true
        identifierTypes:
          type: array
          items:
            type: string
          nullable: true
        type:
          type: string
          nullable: true
        isHidden:
          type: boolean
        customFieldIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        noteLengthLimit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SymbolsRelationShipSaveDto:
      required:
        - hideComment
        - hideDates
      type: object
      properties:
        relationshipCode:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        parentToChildName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        childToParentName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        peerName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        hideDates:
          type: boolean
          default: true
        hideComment:
          type: boolean
          default: true
      additionalProperties: false
    SymbolsRelationshipDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        relationshipCode:
          type: string
          nullable: true
        parentToChildName:
          type: string
          nullable: true
        childToParentName:
          type: string
          nullable: true
        peerName:
          type: string
          nullable: true
        hideDates:
          type: boolean
        hideComment:
          type: boolean
      additionalProperties: false
    TeamConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        defaultSubjectId:
          type: string
          format: uuid
          nullable: true
        userIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    TeamSettingsDto:
      type: object
      properties:
        defaultId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    TeamSummaryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    TitleSettingsDto:
      type: object
      properties:
        usePrevious:
          type: boolean
      additionalProperties: false
    UpdateCustomSymbolTypeDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubtype:
          type: boolean
        isDefault:
          type: boolean
          default: false
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          type: array
          items:
            $ref: '#/components/schemas/CustomSymbolSubTypeDto'
          nullable: true
        customFieldIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    UserConfigDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        serialNumber:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        team:
          $ref: '#/components/schemas/TeamSummaryDto'
      additionalProperties: false
  securitySchemes:
    basicScheme:
      type: http
      scheme: basic
security:
  - basicScheme: []
tags:
  - name: Contacts - CustomFields
  - name: Contacts - PhoneNumberTypes
  - name: Contacts - Relationship Category
  - name: Contacts - Relationships
  - name: Contacts - Roles
  - name: Contacts - Types
  - name: CustomSymbols - CustomFields
  - name: CustomSymbols - Relationships
  - name: CustomSymbols - Types
  - name: Notes - Configuration
